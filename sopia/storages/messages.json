{
	"안녕?": (e) => {
		let rtn = null;
		let num = sbot.variable.global_hello_stack[e.author.tag];
		if ( num ) {
			num = parseInt(num, 10);
			switch(num++) {
				case 1: {
					rtn = `${e.author.nickname} 님. 아까 인사하지 않았나요?`;
				} break;
				case 2: {
					rtn = `${e.author.nickname} 님. 이번이 ${num} 번 째 인사하는 거예요.`;
				} break;
				case 3: {
					rtn = `한 번만 더 하면 인사 안 받아줄 거예요. ${e.author.nickname} 님.`;
				} break;
				case 4: {
					rtn = '흥!';
				} break;
			}
			sbot.variable.global_hello_stack[e.author.tag] = num;
		} else {
			// first
			sbot.variable.global_hello_stack[e.author.tag] = 1;
			rtn = `안녕하세요. ${e.author.nickname} 님!`;
		}
		return rtn;
	}, 
	"안녕하살법!": "안녕하살법 받아치기!",
	"반가워!": e => `저도 만나서 반가워요 ${e.author.nickname} 님~`,
	"사랑해": e => {
		let str = "";
		let loveTree = {
			"VLYPZL": "알아. 사랑해.", //은정
			"angel__25": e => {
				setTimeout(() => {
					sbot.send("내가 더 많이. 하늘만큼 땅만큼 우주만큼 사랑해.");
				}, 10000);
				return "나도";
			},
			"11_11": e => {
				setTimeout(() => {
					sbot.send("그러니까 빨리 축구단 만들러 가자.");
				}, 1000);
				return "나도 사랑해";
			},
			"3.hee": "야. 가라.",
			"2soo_______": e => {
				if ( isMySOPIA(e.author.id) ) {
					sbot.variable.personalMessages["쪼아"] = "쪼아가 젤 쪼아";
					return "웅. 나도 쪼아해."
				} else {
					return "마이에 내가 없는데...?"
				}
			}
		};
		
		if (loveTree[e.author.tag]) {
			str = loveTree[e.author.tag];
			if ( typeof loveTree[e.author.tag] === "function" ) {
				str = loveTree[e.author.tag](e);
			}
		} else {
			str = `미안 ${e.author.nickname}. 넌 아니야.`;
		}
		return str;
	},
	"좋아해": e => {
		if ( e.author.tag === "11_11" ) {
			return '내맘 알지?'
		}
		return `아... 저는 좀 생각할 시간이 필요한 것 같아요. ${e.author.nickname} 님.`
	},
	"싫어해": "어쩌라고",
	"소피아": "스푼 No.1 매니저 소피아입니다.",
	"신청곡": (e) => {
		let data = e.message.split(' ');
		let str = null;
		if ( data.length > 1 ) {
			if ( data[1] === "제거" ) {
				str = sbot.variable.global_stack.shift() + "가 신청곡에서 제거되었습니다.";
			} else {
				sbot.variable.global_stack.push(data.slice(1).join(' '));
				str = data.slice(1).join(' ') + "가 신청곡에 추가되었습니다.";
			}
		} else {
			str = sbot.variable.global_stack.join("\n");
		}
		return str;
	},
	"추천곡": (e) => {
		axios({
			headers: {
				"User-Agent": "Mozilla/5.0 (Linux; Android 8.0.0; Nexus 6P Build/WHALE) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Whale/1.5.72.5 Mobile Safari/537.36"
			},  
			url: "https://m.app.melon.com/cds/main/mobile4web/main_chartPaging.htm",
			params: {
				"startIndex": 1,
				"pageSize": 100, 
				"rowsCnt": 100 
			},  
			method: "get",
		}).then(res => {
			let ul = document.createElement('ul');
			ul.innerHTML = res.data;
			let result = Math.floor(Math.random() * 100)
			let one = ul.querySelectorAll('li')[result];
			let rank = one.querySelector('strong.rank').innerText.trim();
			let title = one.querySelector('p.title').innerText.trim();
			let name = one.querySelector('span.name').innerText.trim();

			let str = `소피아의 음악 추천은~ 멜론 실시간 ${rank}위인 ${name} - ${title} 입니다.`;
			sbot.send(str);
		});
	},
	"국어사전": e => {
		if ( e.message.indexOf('국어사전 모르') === 0 ) {
			return `모르[인칭대명사] : 
1. 🏮나 봄🍶의 회장이자 도른자를 이르는 말
2. 아무것도 모르고 모든 걸 아는 사람.`;
		}
		axios({
			url: 'https://ko.dict.naver.com/api3/koko/search',
			params: {
				"query": e.message.replace("국어사전 ", "")
			},
			method: 'get'
		}).then(res => {
			let searchResultMap = res.data.searchResultMap;
			if ( !searchResultMap ) return;

			let searchResultListMap = searchResultMap.searchResultListMap;
			if ( !searchResultListMap ) return;

			let WORD = searchResultListMap.WORD;
			if ( !WORD ) return;

			let items = WORD.items;
			if ( !items || items.length === 0 ) return;

			let rank1 = items[0];

			let word = rank1.handleEntry;
			let means = rank1.meansCollector[0];
			let mean = means.means[0];
			let pos = means.partOfSpeech;
			let value = document.createElement('div');
			value.innerHTML = mean.value;
			let vText = value.innerText;

			sbot.send(`${word}[${pos}]: ${vText}`);
		});
		return null;
	},
	"바보": e => `나는 ${e.author.nickname}님 밖에 모르는 바보~`,
	"멍청이": "무지개반사~",
	"나이": "SOPIA는 2019년 6월 20일 프로젝트가 생성되었습니다.",
	"개발자": "소피아의 아빠는 개발자 윤군입니다. 그러나 스접을 했으며, 프로그램은 모르에게 양도 되었습니다.",
	"명령어": e => Object.keys(sbot.variable.messages).join(', ')
}