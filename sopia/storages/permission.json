{
	"블랙": e => {
		let nickname = e.message.split(' ');
		let str = null;
		let s = nickname.splice(0, 2);
		nickname = nickname.join(' ');
		switch ( s[1] ) {
			case "추가": {
				let p = sbot.variable.peoples[nickname];
				if ( p ) {
					sbot.variable.black_list.push(p.tag);
					str = `${p.nickname}(id:${p.tag})님이 블랙리스트에 추가되었습니다.`;
				}
			} break;
			case "제거": {
				let p = sbot.variable.peoples[nickname];
				if ( p ) {
					let idx = sbot.variable.black_list.indexOf(p.tag);
					if ( idx >= 0 ) {
						sbot.variable.black_list.splice(idx, 1);
						str = `${p.nickname}(id:${p.tag})님이 블랙리스트에서 해제되었습니다.`;
					}
				}
			}
		}
		return str;
	},
	//업타임에서 평균 15초 딜레이가 있다
	"업타임": e => makePlaybar(parseInt((new Date().getTime() - sbot.variable.created.getTime()) / 1000), 7200),
	"투표": e => {
		let entry = e.message.split('\n');
		let title = entry[0].split(' ');
		let str = null;
		let s = title.splice(0, 2);
		title = title.join(' ');

		if ( s[1] === "등록" ) {
			sbot.vote = new Object();
			sbot.vote.user = new Object();
			for ( let i = 1;i < entry.length;i++ ) {
				sbot.vote[entry[i]] = 0;
			}
			sbot.variable.messages["투표"] = e => {
				let split = e.message.split(' ');
				if ( split.length >= 2 ) {
					let target = split.splice(1, split.length).join(' ');
					if ( sbot.vote.user[e.author.tag] === undefined &&
						 typeof sbot.vote[target] === "number" ) {
						sbot.vote[target] += 1;
						sbot.vote.user[e.author.tag] = true;
					}
				}
				return "";
			};
			str = title + " 투표가 등록되었습니다.";
		} else if ( s[1] === "마감" ) {
			if ( sbot.vote ) {
				let entries = Object.entries(sbot.vote);
				entries.sort((a, b) => b[1] - a[1]);
				str = title + " 결과\n";
				entries.forEach((element, idx) => {
					entries[idx] = element.join(':');
				});
				str += entries.join('\n');
				delete sbot.variable.messages["투표"];
				sbot.vote = null;
			}
		}
		return str;
	},
	"eval": (e) => {
		if (e.message === "eval") {
			eval(sopia.var.evalString);
			sopia.var.evalString = "";
		} else {
			let cmd = e.message.replace("eval ", "");
			eval(cmd);
		}
		return null;
	},
	"evalr": (e) => {
		let cmd = e.message.replace("evalr ", "");
		let rtn = "명령어 결과: " + eval(cmd).toString()
		return rtn;
	},
	"evals": (e) => {
		sopia.var.evalString += data.replace('evals ');
	},
	"off": (e) => {
		sopia.send("소피아의 동작이 중지됩니다.\n!on 명령을 사용하여 킬 수 있습니다.");
        sopia.var._send_ = soipa.send;
		sopia.send = () => {};
		sopia.is_on = false;
	},
	"on": (e) => {
        if ( sopia.var._send_ ) {
		    sopia.send = sopia.var._send_;
        }
		sopia.send("소피아가 동작합니다.\n!off 명령어를 사용하여 종료할 수 있습니다.");
		sopia.is_on = true;
	}
};